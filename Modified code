import streamlit as st
import pandas as pd

# Page Config
st.set_page_config(page_title="Dynamic SQL Dashboard", layout="centered")

# === UI for DB Connection ===
st.title("üóÑÔ∏è SQL Server Connection")

with st.form("db_connection_form"):
    host = st.text_input("SQL Server Hostname or IP", value="localhost")
    port = st.text_input("Port", value="1433")
    db_name = st.text_input("Database Name")
    username = st.text_input("Username")
    password = st.text_input("Password", type="password")
    driver = st.selectbox("ODBC Driver", options=[
        "ODBC Driver 18 for SQL Server",
        "ODBC Driver 17 for SQL Server"
    ])
    connect_btn = st.form_submit_button("Connect")

# Session state to persist connection
if "connected" not in st.session_state:
    st.session_state.connected = False
    st.session_state.engine = None

# === Mocked DB Connection ===
if connect_btn:
    try:
        # === MOCK CONNECTION (No real DB needed) ===
        st.session_state.connected = True
        st.session_state.engine = "mocked"  # Just a flag
        st.success("‚úÖ [MOCK] Connected to SQL Server database successfully.")
    except Exception as e:
        st.session_state.connected = False
        st.session_state.engine = None
        st.error(f"‚ùå Database connection failed: {e}")

# === Query Form ===
if st.session_state.connected and st.session_state.engine:
    st.title("üîç Product Report Dashboard")
    st.header("Query Product Data")

    with st.form("query_form"):
        location = st.text_input("Location")
        gf_number = st.text_input("GF Number")
        order_id = st.text_input("Order ID")
        query_submitted = st.form_submit_button("Run Query")

        if query_submitted:
            if not all([location, gf_number, order_id]):
                st.warning("‚ö†Ô∏è All fields are required.")
            else:
                try:
                    # === MOCKED QUERY RESULT ===
                    mock_data = {
                        "location": [location],
                        "gf_number": [gf_number],
                        "order_id": [order_id],
                        "product_name": ["Mock Product"],
                        "quantity": [10],
                        "price": [199.99]
                    }
                    df = pd.DataFrame(mock_data)

                    st.success(f"‚úÖ Found {len(df)} records.")
                    st.dataframe(df)

                    # CSV Download
                    csv = df.to_csv(index=False).encode('utf-8')
                    st.download_button("üì• Download CSV", data=csv, file_name="product_report.csv", mime="text/csv")

                except Exception as e:
                    st.error(f"‚ùå Error running query: {e}")
